defaults:
  - _self_

hydra:
  run:
    dir: ${logdir}

_target_: agent.finetune.train_simple_mlp_ppo_agent.TrainSimpleMLP_PPOAgent

name: ${env_name}_simple_mlp_ppo_env_improved_ta${horizon_steps}
logdir: ${oc.env:DPPO_LOG_DIR,${hydra:runtime.cwd}/log}/gym-finetune/${name}/${now:%Y-%m-%d}_${now:%H-%M-%S}_${seed}

seed: 42
device: cuda:0
env_name: hopper-medium-v2
obs_dim: 11
action_dim: 3
cond_steps: 1
horizon_steps: 4
act_steps: 4

env:
  n_envs: 40
  name: ${env_name}
  max_episode_steps: 1000
  reset_at_iteration: False
  save_video: False
  best_reward_threshold_for_success: 3600
  wrappers:
    mujoco_locomotion_lowdim:
      normalization_path: ${oc.env:DPPO_DATA_DIR,${hydra:runtime.cwd}/data}/gym/${env_name}/normalization.npz
    multi_step:
      n_obs_steps: ${cond_steps}
      n_action_steps: ${act_steps}
      max_episode_steps: ${env.max_episode_steps}
      reset_within_step: True

wandb:
  entity: ${oc.env:DPPO_WANDB_ENTITY}
  project: gym-${env_name}-finetune-simple-ppo-improved
  run: ${name}_SimpleMLP_PPO_Env_Improved
  group: ${oc.env:WANDB_GROUP,${env_name}-simple-ppo-improved}
  tags: [SimpleMLP, PPO, Env_Reward, Improved]

train:
  n_train_itr: 400  # 增加训练轮数
  n_critic_warmup_itr: 0
  n_steps: 1000  # 增加轨迹长度，提供更多学习信号
  gamma: 0.995  # 稍微提高折扣因子，重视长期奖励
  
  # 改进的学习率调度
  actor_lr: 5e-4  # 稍微提高初始学习率
  actor_weight_decay: 0
  actor_lr_scheduler:
    first_cycle_steps: 2000  # 更长的学习率周期
    warmup_steps: 50
    min_lr: 5e-6  # 更低的最小学习率，允许更长时间细调
  
  critic_lr: 2e-3  # 提高critic学习率
  critic_weight_decay: 0
  critic_lr_scheduler:
    first_cycle_steps: 2000
    warmup_steps: 50
    min_lr: 1e-5
  
  save_model_freq: 50
  val_freq: 10
  log_freq: 1
  render:
    freq: 100
    num: 0
  
  # PPO 改进参数
  reward_scale_running: True
  reward_scale_const: 1.0
  gae_lambda: 0.98  # 提高GAE lambda，更好的价值估计
  batch_size: 20000  # 增加批量大小
  update_epochs: 10  # 增加更新次数
  vf_coef: 1.0  # 增加价值函数重要性
  target_kl: 0.02  # 降低KL散度限制，允许更大更新

model:
  _target_: model.rl.simple_mlp_ppo.SimpleMLP_PPO
  
  # PPO parameters - 放宽剪切限制
  clip_ploss_coef: 0.3  # 增加策略剪切系数
  clip_vloss_coef: 0.3  # 增加价值剪切系数
  norm_adv: True
  
  # Reward configuration
  use_ebm_reward: False
  ebm_reward_scale: 1.0
  ebm_reward_clip_max: 60.0
  use_auto_scaling: False
  
  # EBM configuration (not used)
  ebm:
    embed_dim: 256
    nhead: 8
    depth: 4
    dropout: 0.0
    use_cls_token: False
    num_views: null
  
  # 更大的网络架构
  actor:
    _target_: model.common.mlp_gaussian.Gaussian_MLP
    action_dim: ${action_dim}
    horizon_steps: ${horizon_steps}
    cond_dim: 11
    mlp_dims: [512, 512, 256]  # 更大的网络
    activation_type: ReLU
    tanh_output: True
    residual_style: False
    use_layernorm: True  # 使用LayerNorm提高训练稳定性
    dropout: 0.1
    fixed_std: null
    learn_fixed_std: False
    std_min: 0.02  # 稍微提高最小探索
    std_max: 1.5   # 增加最大探索
    
  critic:
    _target_: model.common.critic.CriticObs
    cond_dim: 11
    mlp_dims: [512, 512, 256]  # 更大的网络
    activation_type: ReLU
    residual_style: False

  horizon_steps: ${horizon_steps}
  obs_dim: ${obs_dim}
  action_dim: ${action_dim}
  device: ${device}